{
    "@graph": [
        {
            "@id": "gnd:1136341129",
            "sameAs": "Kotlin (Programmiersprache)"
        },
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1026149479",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource (299 Seiten)",
            "creator": "Soshin, Alexey",
            "description": "Erworben aus Studienqualit\u00e4tsmitteln",
            "identifier": [
                "(isbn13)9781788999595",
                "(firstid)GBV:1026149479",
                "(isbn13)9781788998017",
                "(ppn)1026149479"
            ],
            "publisher": "Packt Publishing",
            "subject": [
                "(classificationName=ddc)005.133",
                "Electronic books",
                "(classificationName=bk, id=106418890)54.53 - Programmiersprachen",
                "Java (Computer program language)",
                "(classificationName=linsearch:mapping)inf"
            ],
            "title": "Hands-On Design Patterns with Kotlin : Build Scalable Applications Using Traditional, Reactive, and Concurrent Design Patterns in Kotlin",
            "abstract": [
                "A lethal weapon -- Composite -- Get together -- The Squad -- Varargs and secondary constructors -- Counting bullets -- Facade -- Keep it simple -- Flyweight -- Being conservative -- Saving memory -- Proxy -- A short detour into the RMI world -- A replacement -- Lazy delegation -- Summary -- Chapter 4: Getting Familiar with Behavioral Patterns -- Strategy -- Fruit arsenal -- Citizen function -- Switching sides -- Iterator -- One, two... many -- Running through the values -- State -- Fifty shades of State -- State of the Nation -- Command -- Undoing commands -- Chain of responsibility -- Interpreter -- We need to go deeper -- A language of your own -- Taking a break -- Call suffix -- Mediator -- Trouble in the Jungle -- The middleman -- Flavors -- Caveats -- Memento -- Remembrance -- Visitor -- Writing a crawler -- Template method -- Observer -- Animal Choir -- Summary -- Chapter 5: Functional Programming -- Why functional programming? -- Immutability -- Tuples -- Value mutation -- Immutable collections -- Functions as values -- Higher-order functions -- Pure functions -- Currying -- Memoization -- Expressions, not statements -- Pattern matching -- Recursion -- Summary -- Chapter 6: Streaming Your Data -- The it notation -- The map() function -- Filter family -- Find family -- Drop family -- Sort family -- ForEach -- Join family -- Fold/Reduce -- Flat family -- Slice -- Chunked -- Zip/Unzip -- Streams are lazy, collections are not -- Sequences -- Summary -- Chapter 7: Staying Reactive -- Reactive principles -- Responsiveness -- Resiliency -- Elasticity -- Message-driven -- Reactive extension -- Hot Observable -- Multicast -- Subject -- ReplaySubject -- BehaviorSubject -- AsyncSubject -- SerializedSubject -- Flowables -- Holding state -- FlowableProcessor -- Batching -- Throttling -- Summary -- Chapter 8: Threads and Coroutines -- Threads",
                "Design patterns enable you to speed up the development process by providing tested, proven development paradigms. Reusing design patterns helps prevent complex issues, improves your code base, promotes code reuse, and makes the architecture more robust. This book will ease the adoption of design patterns in Kotlin and provide best practices.",
                "Thread safety -- Threads are expensive -- Coroutines -- Starting coroutines -- Jobs -- Coroutine starvation -- Coroutines under the hood -- Fixing starvation -- Waiting for a coroutine -- Canceling a coroutine -- Returning results -- Setting timeouts -- Parent jobs -- Channels -- Producers -- Actors -- Summary -- Chapter 9: Designed for Concurrency -- Active Object -- Testing -- Deferred value -- Barrier -- CountDownLatch -- Data class as Barrier -- Scheduler -- Understanding contexts -- Pipelines -- Establishing a pipeline -- The fan-out design pattern -- The fan-in design pattern -- Managing workers -- Buffered channels -- Unbiased select -- Mutexes -- Selecting on close -- Sidekick channel -- Deferred channel -- Summary -- Chapter 10: Idioms and Anti-Patterns -- Let -- Apply -- Also -- Run -- With -- Instance checks -- Try-with-resources -- Inline functions -- Reified -- Constants -- Constructor overload -- Dealing with nulls -- Explicit async -- Validation -- Sealed, not enumerated -- More companions -- Scala functions -- Summary -- Chapter 11: Reactive Microservices with Kotlin -- Getting started with Vert.x -- Routing -- Handling requests -- Verticles -- Subrouting -- Testing -- Helper methods -- Working with databases -- Managing configuration -- Managing the database -- EventBus -- Consumer -- Producer -- More testing -- Summary -- Other Books You May Enjoy -- Index",
                "Cover -- Title Page -- Copyright and Credits -- Dedication -- Packt Upsell -- Contributors -- Table of Contents -- Preface -- Chapter 1: Getting Started with Kotlin -- Basic language syntax and features -- Multi-paradigm -- Code structure -- No semicolons -- Naming conventions -- Packages -- Types -- Type inference -- val versus var -- Comparison -- Null safety -- Declaring functions -- Control flow -- Using the if expression -- Using the when expression -- String interpolation -- Classes and inheritance -- Classes -- Inheritance -- Constructors -- Properties -- Data classes -- More control flow - loops -- The for loop -- For-each loop -- While loop -- Extension functions -- Introduction to design patterns -- What are design patterns? -- Design patterns in real life -- Design process -- Why use design patterns in Kotlin? -- Summary -- Chapter 2: Working with Creational Patterns -- Singleton -- Factory Method -- Factory -- Static Factory Method -- Advantages of the Static Factory Method -- Caching -- Subclassing -- Static Factory Method in Kotlin -- Companion object -- Abstract Factory -- Abstract Factory in action -- Introduction to generics in Kotlin -- Back to our bases -- Making improvements -- Builder -- Composing an email -- Collection types in Kotlin -- Creating an email - first attempt -- Creating an email - second attempt -- Creating an email - the Kotlin way -- Creating an email - the Kotlin way - second attempt -- Prototype -- Building your own PC -- Starting from a prototype -- Summary -- Chapter 3: Understanding Structural Patterns -- Decorator -- Enhancing a class -- Operator overloading -- Dude, where's my map? -- The great combinator -- Caveats -- Adapter -- Different adapters -- Adapters in the real world -- Caveats of using adapters -- Bridge -- Bridging changes -- Type aliases -- You're in the army now -- Constants"
            ],
            "contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": [
                "(collectioncode)ZDB-30-PQE",
                "(collectioncode)BSZ-30-PQE-K1DLR",
                "(collectioncode)ZDB-30-PAD"
            ],
            "issued": "2018",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "dcterms:subject": {
                "@id": "gnd:1136341129"
            },
            "P60163": "Birmingham$aMumbai"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "description": "http://purl.org/dc/elements/1.1/description",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "license": "http://purl.org/dc/terms/license",
        "title": "http://purl.org/dc/elements/1.1/title",
        "abstract": "http://purl.org/dc/terms/abstract",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "issued": "http://purl.org/dc/terms/issued",
        "contributor": "http://purl.org/dc/terms/contributor",
        "sameAs": "http://www.w3.org/2002/07/owl#sameAs",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}