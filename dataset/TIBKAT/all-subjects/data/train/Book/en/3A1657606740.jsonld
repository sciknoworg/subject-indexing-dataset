{
    "@graph": [
        {
            "@id": "gnd:134965248",
            "sameAs": "Harrison, Nick"
        },
        {
            "@id": "gnd:4047409-4",
            "sameAs": "Programmiersprache"
        },
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1657606740",
            "@type": "bibo:Book",
            "P1053": "Online-Ressource (XV, 105 p. 15 illus., 13 illus. in color, online resource)",
            "description": [
                "Campusweiter Zugriff (Universit\u00e4t Hannover). - Vervielf\u00e4ltigungen (z.B. Kopien, Downloads) sind nur von einzelnen Kapiteln oder Seiten und nur zum eigenen wissenschaftlichen Gebrauch erlaubt. Keine Weitergabe an Dritte. Kein systematisches Downloaden durch Robots.",
                "Erworben aus Studienqualit\u00e4tsmitteln"
            ],
            "identifier": [
                "(firstid)BSZ:486680916",
                "(ppn)1657606740",
                "(isbn13)9781484222119",
                "(doi)10.1007/978-1-4842-2211-9"
            ],
            "publisher": "Apress",
            "subject": [
                "Programming languages (Electronic computers)",
                "Microsoft .NET Framework.",
                "Microsoft software.",
                "(classificationName=linsearch:mapping)inf",
                "Computer Science",
                "Computer science",
                "(classificationName=ddc)004.165",
                "(classificationName=rvk)ST 250"
            ],
            "title": "Code Generation with Roslyn",
            "abstract": [
                "Learn how Roslyn's new code generation capability will let you write software that is more concise, runs faster, and is easier to maintain. You will learn from real-world business applications to create better software by letting the computer write its own code based on your business logic already defined in lookup tables. Code Generation with Rosyln is the first book to cover this new capability. You will learn how these techniques can be used to simplify systems integration so that if one system already defines business logic through lookup tables, you can integrate a new system and share business logic by allowing the new system to write its own business logic based on already existing table-based business logic. One of the many benefits you will discover is that Roslyn uses an innovative approach to compiler design, opening up the inner workings of the compiler process. You will learn how to see the syntax tree that Roslyn is building as it compiles your code. Additionally, you will learn to feed it your own syntax tree that you create on the fly. What You Will Learn: \u2022 Structure logic to be stored in database design \u2022 Build complex conditional logic based on lookup data in the database \u2022 Compile code that you generate programmatically \u2022 Discover generated code and run it dynamically to implement new business logic \u2022 Debug problems in generated code \u2022 Deploy and access generated code",
                "1. Introduction -- 2. Putting Business Logic in Tables -- 3. Pulling Table Driven Logic into Code -- 4. An Introduction to Roslyn -- 5. Generating Code -- 6. Deploying Generated Code -- 7. Reflecting on Generated Code -- 8. Best Practices"
            ],
            "contributor": "Technische Informationsbibliothek (TIB)",
            "creator": "gnd:134965248",
            "isPartOf": [
                "(collectioncode)ZDB-2-SEB",
                "(collectioncode)ZDB-2-CWD",
                "(collectioncode)ZDB-2-SXPC"
            ],
            "issued": "2017",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "dcterms:subject": {
                "@id": "gnd:4047409-4"
            },
            "isLike": "doi:10.1007/978-1-4842-2211-9",
            "P30128": [
                "B\u00fccher",
                "SpringerLink"
            ],
            "P60163": "Berkeley, CA"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "description": "http://purl.org/dc/elements/1.1/description",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "isLike": {
            "@id": "http://umbel.org/umbel#isLike",
            "@type": "@id"
        },
        "creator": {
            "@id": "http://purl.org/dc/terms/creator",
            "@type": "@id"
        },
        "abstract": "http://purl.org/dc/terms/abstract",
        "license": "http://purl.org/dc/terms/license",
        "issued": "http://purl.org/dc/terms/issued",
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "title": "http://purl.org/dc/elements/1.1/title",
        "contributor": "http://purl.org/dc/terms/contributor",
        "P30128": "http://www.rdaregistry.info/Elements/m/#P30128",
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "sameAs": "http://www.w3.org/2002/07/owl#sameAs",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}