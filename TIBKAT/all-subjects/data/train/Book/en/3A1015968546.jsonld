{
    "@graph": [
        {
            "@id": "gnd:1135597375",
            "sameAs": "Deep learning"
        },
        {
            "@id": "gnd:1202487386",
            "sameAs": "PyTorch"
        },
        {
            "@id": "gnd:4434275-5",
            "sameAs": "Python (Programmiersprache)"
        },
        {
            "@id": "https://www.tib.eu/de/suchen/id/TIBKAT%3A1015968546",
            "@type": "bibo:Book",
            "P1053": "1 Online-Ressource (vii, 238 Seiten)",
            "creator": "Subramanian, Vishnu",
            "description": [
                "Erworben aus Studienqualit\u00e4tsmitteln",
                "Illustrationen"
            ],
            "identifier": [
                "(isbn13)9781788626071",
                "(firstid)GBV:1015968546",
                "(ppn)1015968546"
            ],
            "publisher": "Packt",
            "subject": [
                "(classificationName=linsearch:mapping)inf",
                "(classificationName=ddc)006.32",
                "Neural networks (Computer science)",
                "Electronic books"
            ],
            "title": "Deep learning with PyTorch : a practical approach to building neural network models using PyTorch",
            "abstract": [
                "This book provides the intuition behind the state of the art Deep Learning architectures such as ResNet, DenseNet, Inception, and encoder-decoder without diving deep into the math of it. It shows how you can implement and use various architectures to solve problems in the area of image classification, language translation and NLP using PyTorch.",
                "Generate batches of vectors -- Creating a network model with embedding -- Training the model -- Using pretrained word embeddings -- Downloading the embeddings -- Loading the embeddings in the model -- Freeze the embedding layer weights -- Recursive neural networks -- Understanding how RNN works with an example\u00c2 -- LSTM -- Long-term dependency\u00c2 -- LSTM networks -- Preparing the data -- Creating batches -- Creating the network\u00c2 -- Training the model -- Convolutional network on sequence data -- Understanding one-dimensional convolution for sequence data\u00c2 -- Creating the network -- Training the model -- Summary -- Chapter 7: Generative Networks -- Neural style transfer\u00c2 -- Loading the data -- Creating the VGG model -- Content loss -- Style loss -- Extracting the losses\u00c2 -- Creating loss function for each layers -- Creating the optimizer -- Training -- Generative adversarial networks -- Deep convolutional GAN -- Defining the generator network -- Transposed convolutions -- Batch normalization -- Generator -- Defining the discriminator network -- Defining loss and optimizer -- Training the discriminator -- Training the discriminator with real images -- Training the discriminator with fake images -- Training the generator network\u00c2 -- Training the complete network -- Inspecting the generated images -- Language modeling\u00c2 -- Preparing the data\u00c2 -- Generating the batches\u00c2 -- Batches\u00c2 -- Backpropagation through time -- Defining a model based on LSTM -- Defining the train and evaluate functions -- Training the model -- Summary -- Chapter 8: Modern Network Architectures -- Modern network architectures -- ResNet\u00c2 -- Creating PyTorch datasets -- Creating loaders for training and validation -- Creating a ResNet model -- Extracting convolutional features -- Creating a custom PyTorch dataset class for the pre-convoluted features and loader",
                "Creating a simple linear model -- Training and validating the model -- Inception -- Creating an Inception model -- Extracting convolutional features using register_forward_hook -- Creating a new dataset for the convoluted features -- Creating a fully connected model -- Training and validating the model -- Densely connected convolutional networks \u00e2 DenseNet -- DenseBlock -- DenseLayer -- Creating a DenseNet model -- Extracting DenseNet features -- Creating a dataset and loaders -- Creating a fully connected model and train -- Model ensembling -- Creating models -- Extracting the image features -- Creating a custom dataset along with data loaders -- Creating an ensembling model -- Training and validating the model -- Encoder-decoder architecture\u00c2 -- Encoder\u00c2 -- Decoder -- Summary -- Chapter 9: What Next? -- What next? -- Overview -- Interesting ideas to explore -- Object detection -- Image segmentation -- OpenNMT in PyTorch -- Alien NLP -- fast.ai \u00e2 making neural nets uncool again -- Open Neural Network Exchange\u00c2 -- How to keep yourself updated -- Summary -- Other Books You May Enjoy -- Index",
                "Cover -- Copyright and Credits -- Dedication -- Packt Upsell -- Foreword -- Contributors -- Table of Contents -- Preface -- Chapter 1: Getting Started with Deep Learning Using PyTorch -- Artificial intelligence -- The history of AI -- Machine learning -- Examples of machine learning in real life -- Deep learning -- Applications of deep learning -- Hype associated with deep learning\u00c2 -- The history of deep learning\u00c2 -- Why now? -- Hardware availability -- Data and algorithms -- Deep learning frameworks -- PyTorch -- Summary -- Chapter 2: Building Blocks of Neural Networks -- Installing PyTorch -- Our first neural network -- Data preparation -- Scalar (0-D tensors)\u00c2 -- Vectors (1-D tensors) -- Matrix (2-D tensors) -- 3-D tensors -- Slicing tensors\u00c2 -- 4-D tensors -- 5-D tensors -- Tensors on GPU -- Variables -- Creating data for our neural network -- Creating learnable parameters -- Neural network model -- Network implementation\u00c2 -- Loss function -- Optimize the neural network\u00c2 -- Loading data\u00c2 -- Dataset class -- DataLoader class -- Summary\u00c2 -- Chapter 3: Diving Deep into Neural Networks -- Deep dive into the building blocks of neural networks -- Layers \u00e2 fundamental blocks of neural networks -- Non-linear activations -- Sigmoid -- Tanh -- ReLU -- Leaky ReLU -- PyTorch non-linear activations -- The PyTorch way of building deep learning algorithms -- Model architecture for different machine learning problems -- Loss functions -- Optimizing network architecture -- Image classification using deep learning -- Loading data into PyTorch tensors -- Loading PyTorch tensors as batches -- Building the network architecture -- Training the model\u00c2 -- Summary -- Chapter 4: Fundamentals of Machine Learning -- Three kinds of machine learning problems -- Supervised learning -- Unsupervised learning -- Reinforcement learning -- Machine learning glossary.",
                "Evaluating machine learning models -- Training, validation, and test split -- Simple holdout validation -- K-fold validation -- K-fold validation with shuffling\u00c2 -- Data representativeness\u00c2 -- Time sensitivity -- Data redundancy -- Data preprocessing and feature engineering -- Vectorization -- Value normalization -- Handling missing values -- Feature engineering -- Overfitting and underfitting -- Getting more data -- Reducing the size of the network -- Applying weight regularization -- Dropout -- Underfitting -- Workflow of a machine learning project -- Problem definition and dataset creation -- Measure of success\u00c2 -- Evaluation protocol -- Prepare your data -- Baseline model -- Large model enough to overfit -- Applying regularization -- Learning rate picking strategies\u00c2 -- Summary -- Chapter 5: Deep Learning for Computer Vision -- Introduction to neural networks -- MNIST \u00e2 getting data -- Building a CNN model from scratch -- Conv2d -- Pooling -- Nonlinear activation \u00e2 ReLU -- View -- Linear layer -- Training the model -- Classifying dogs and cats \u00e2 CNN from scratch -- Classifying dogs and cats using transfer learning -- Creating and exploring a VGG16 model\u00c2 -- Freezing the layers -- Fine-tuning VGG16 -- Training the VGG16 model\u00c2 -- Calculating pre-convoluted features -- Understanding what a CNN model learns\u00c2 -- Visualizing outputs from intermediate layers -- Visualizing weights of the CNN layer -- Summary -- Chapter 6: Deep Learning with Sequence Data and Text -- Working with text data -- Tokenization -- Converting text into characters -- Converting text into words -- N-gram representation -- Vectorization -- One-hot encoding -- Word embedding -- Training word embedding\u00c2 by building a sentiment classifier -- Downloading IMDB data and performing text tokenization -- torchtext.data -- torchtext.datasets -- Building vocabulary"
            ],
            "contributor": "Technische Informationsbibliothek (TIB)",
            "isPartOf": "(collectioncode)ZDB-30-PQE",
            "issued": "2018",
            "language": "http://id.loc.gov/vocabulary/iso639-1/en",
            "license": "commercial licence",
            "medium": "rda:termList/RDACarrierType/1018",
            "dcterms:subject": [
                {
                    "@id": "gnd:4434275-5"
                },
                {
                    "@id": "gnd:1135597375"
                },
                {
                    "@id": "gnd:1202487386"
                }
            ],
            "P60163": "Birmingham"
        }
    ],
    "@id": "urn:x-arq:DefaultGraphNode",
    "@context": {
        "medium": {
            "@id": "http://purl.org/dc/terms/medium",
            "@type": "@id"
        },
        "isPartOf": "http://purl.org/dc/terms/isPartOf",
        "subject": "http://purl.org/dc/elements/1.1/subject",
        "abstract": "http://purl.org/dc/terms/abstract",
        "issued": "http://purl.org/dc/terms/issued",
        "contributor": "http://purl.org/dc/terms/contributor",
        "language": {
            "@id": "http://purl.org/dc/terms/language",
            "@type": "@id"
        },
        "title": "http://purl.org/dc/elements/1.1/title",
        "identifier": "http://purl.org/dc/elements/1.1/identifier",
        "description": "http://purl.org/dc/elements/1.1/description",
        "creator": "http://purl.org/dc/elements/1.1/creator",
        "license": "http://purl.org/dc/terms/license",
        "P60163": "http://www.rdaregistry.info/Elements/u/#P60163",
        "publisher": "http://purl.org/dc/elements/1.1/publisher",
        "P1053": "http://iflastandards.info/ns/isbd/elements/P1053",
        "sameAs": "http://www.w3.org/2002/07/owl#sameAs",
        "umbel": "http://umbel.org/umbel#",
        "rdau": "http://www.rdaregistry.info/Elements/u/#",
        "owl": "http://www.w3.org/2002/07/owl#",
        "dcterms": "http://purl.org/dc/terms/",
        "bibo": "http://purl.org/ontology/bibo/",
        "rdam": "http://www.rdaregistry.info/Elements/m/#",
        "gnd": "http://d-nb.info/gnd/",
        "isbd": "http://iflastandards.info/ns/isbd/elements/",
        "rda": "http://rdvocab.info/",
        "doi": "https://doi.org/"
    }
}